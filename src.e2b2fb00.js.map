{"version":3,"sources":["utils.js","classes/blocks.js","model.js","classes/site.js","classes/sidebar.js","classes/app.js","index.js"],"names":["row","content","styles","col","css","Object","keys","map","key","join","form","type","Block","value","options","Error","TitleBlock","tag","ImageBlock","imageStyle","ColumnsBlock","html","TextBlock","model","margin","width","height","Site","selector","$el","document","querySelector","innerHTML","forEach","block","insertAdjacentHTML","toHTML","Sidebar","updateCallback","update","init","template","addEventListener","add","bind","event","preventDefault","newBlock","target","name","App","site","render","push"],"mappings":"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","file":"src.e2b2fb00.js","sourceRoot":"..\\src","sourcesContent":["export function row(content, styles='') {\r\n    return `<div class=\"row\" style=\"${styles}\">${content}</div>`\r\n}\r\n\r\nexport function col(content) {\r\n    return `<div class=\"col-sm\">${content}</div>`\r\n}\r\n\r\nexport function css(styles={}) {\r\n    if(typeof styles === 'string') return styles\r\n    return Object.keys(styles).map(key=>`${key}:${styles[key]}`).join(';')\r\n}\r\n\r\nexport function form(type) {\r\n    return `\r\n        <form name=\"${type}\">\r\n            <h5>${type}</h5>\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control form-control-sm\" name=\"value\" placeholder=\"value\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input class=\"form-control form-control-sm\" name=\"styles\" placeholder=\"styles\">\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-success btn-sm\">Добавить</button>\r\n        </form>\r\n    `\r\n}\r\n","import {col, css, row} from \"../utils\";\r\n\r\nexport class Block {\r\n    constructor(value, options) {\r\n        this.value = value\r\n        this.options = options\r\n    }\r\n\r\n    toHTML() {\r\n        throw new Error('Method toHTML must be declared')\r\n    }\r\n}\r\n\r\nexport class TitleBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options);\r\n    }\r\n\r\n    toHTML() {\r\n        const { tag='h1', styles } = this.options\r\n        return row(col(`<${tag}>${this.value}</${tag}>`), css(styles))\r\n    }\r\n}\r\n\r\nexport class ImageBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options);\r\n    }\r\n\r\n    toHTML() {\r\n        const styles = css(this.options.imageStyle)\r\n        return row(`<img style=\"${styles}\" src=\"${this.value}\" alt=\"img\">`, css(this.options.styles))\r\n    }\r\n}\r\n\r\nexport class ColumnsBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options);\r\n    }\r\n\r\n    toHTML() {\r\n        const html = this.value.map(col).join('')\r\n        return row(`${html}`, css(this.options.styles))\r\n    }\r\n}\r\n\r\nexport class TextBlock extends Block {\r\n    constructor(value, options) {\r\n        super(value, options);\r\n    }\r\n\r\n    toHTML() {\r\n        return row(col(`<p>${this.value}</p>`), css(this.options.styles))\r\n    }\r\n}\r\n","import { TextBlock, TitleBlock, ImageBlock, ColumnsBlock } from './classes/blocks'\r\n\r\nexport const model = [\r\n    new ImageBlock('https://ffwallpaper.com/wallup/programming-code/programming-code-44.jpg', {\r\n        styles: {\r\n            margin: '0 auto'\r\n        },\r\n        imageStyle: {\r\n            width: '100%',\r\n            height: '300px',\r\n        }\r\n    }),\r\n    new TitleBlock('Конструктор сайта на чистом JS', {\r\n        tag: 'h2', styles:\r\n            {margin: '0 auto',\r\n                'text-align':'center'}\r\n    }),\r\n    // new TextBlock('Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eaque, omnis.', {\r\n    //     styles: {margin:'10px'}\r\n    // }),\r\n    // new ColumnsBlock( ['col1', 'col2', 'col3','col4', 'col5', 'col6','col7', 'col8', 'col9','col11', 'col12'], {\r\n    //     styles: {background:'green'}\r\n    // })\r\n]\r\n","import {model} from \"../model\";\r\n\r\nexport class Site {\r\n    constructor(selector) {\r\n        this.$el = document.querySelector(selector)\r\n    }\r\n\r\n    render(model) {\r\n        this.$el.innerHTML = ''\r\n        model.forEach(block => {\r\n            this.$el.insertAdjacentHTML('beforeend', block.toHTML())\r\n        })\r\n    }\r\n}\r\n","import { form } from '../utils'\r\nimport { ColumnsBlock, ImageBlock, TextBlock, TitleBlock } from \"./blocks\";\r\n\r\nexport class Sidebar {\r\n    constructor(selector, updateCallback) {\r\n        this.$el = document.querySelector(selector)\r\n        this.update = updateCallback\r\n\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        this.$el.insertAdjacentHTML('afterbegin', this.template)\r\n        this.$el.addEventListener('submit', this.add.bind(this))\r\n    }\r\n\r\n    get template() {\r\n        return [form('title'), form('text'), form('image')].join('')\r\n    }\r\n\r\n    add(event) {\r\n        event.preventDefault()\r\n        const type = event.target.name\r\n        const value = event.target.value.value\r\n        const styles = event.target.styles.value\r\n\r\n        let newBlock\r\n\r\n        if(type === 'text') {\r\n            newBlock = new TextBlock(value, {styles})\r\n        } else if(type === 'title') {\r\n            newBlock = new TitleBlock(value, {styles})\r\n        } else if(type === 'image') {\r\n            newBlock = new ImageBlock(value, {styles})\r\n        } else if(type === 'columns') {\r\n            newBlock = new ColumnsBlock(value, {styles})\r\n        }\r\n        this.update(newBlock)\r\n        event.target.value.value = ''\r\n        event.target.styles.value = ''\r\n    }\r\n}\r\n","import {Site} from \"./site\";\r\nimport {model} from \"../model\";\r\nimport {Sidebar} from \"./sidebar\";\r\n\r\nexport class App {\r\n    constructor(model) {\r\n        this.model = model\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        const site = new Site('#site')\r\n\r\n        site.render(model)\r\n\r\n        const updateCallback = new Sidebar('#panel', newBlock => {\r\n            this.model.push(newBlock)\r\n            site.render(this.model)\r\n        })\r\n\r\n        // new Sidebar('#panel', updateCallback)\r\n    }\r\n}\r\n","import './style.css'\r\nimport { model } from './model'\r\nimport {App} from \"./classes/app\";\r\n\r\nnew App(model)\r\n"]}